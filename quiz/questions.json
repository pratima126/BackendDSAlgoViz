[
  {
    "question": "Q1:Which one of the below is a divide and conquer approach?",
    "a": "Insertion Sort",
    "b": "Merge Sort",
    "c": "Shell Sort",
    "d": "Heap Sort",
    "ans": "ans2"
  },
  {
    "question": "Q2:push() and pop() functions are found in",
    "a": "queues",
    "b": "lists",
    "c": "stacks",
    "d": "trees",
    "ans": "ans3"
  },
  {
    "question": "Q3:In the deletion operation of max heap, the root is replaced by",
    "a": "next available value in the left sub-tree.",
    "b": " next available value in the right sub-tree.",
    "c": "any random value from the heap.",
    "d": "last element of the last level",
    "ans": "ans4"
  },
  {
    "question": "Q4:Which of the following algorithm is not stable?",
    "a": "Bubble Sort",
    "b": "Quick Sort",
    "c": "Merge Sort",
    "d": "Insertion Sort",
    "ans": "ans2"
  },
  {
    "question": "Q5: An adaptive sorting algorithm −",
    "a": "adapts to new computers.",
    "b": "takes advantage of already sorted elements.",
    "c": "takes input which is already sorted.",
    "d": "none of the above.",
    "ans": "ans2"
  },
  {
    "question": "Q6:What is the worst case time complexity of linear search algorithm?",
    "a": "0(1)",
    "b": "O(n)",
    "c": "O(log n)",
    "d": "O(n^2)",
    "ans": "ans4"
  },
  {
    "question": "Q7:Maximum number of nodes in a binary tree with height k, where root is height 0, is",
    "a": " 2^k − 1",
    "b": "2^(k+1) − 1",
    "c": " 2^(k-1) + 1",
    "d": "2^k + 1",
    "ans": "ans2"
  },
  {
    "question": "Q8: Quick sort algorithm is an example of",
    "a": "Greedy Approach",
    "b": "Improved Binary Search",
    "c": "Dynamic Programming",
    "d": "Divide and Conquer",
    "ans": "ans4"
  },
  {
    "question": "Q9:Visiting root node after visiting left and right sub-trees is called",
    "a": "In-order Traversal",
    "b": "Pre-Order Traversal",
    "c": "Post-Order Traversal",
    "d": "None of the above",
    "ans": "ans3"
  },
  {
    "question": "Q10:Which method can find if two vertices x & y have path between them?",
    "a": "Depth First Search",
    "b": "Breadth First Search",
    "c": "Both a & b",
    "d": "None a or b",
    "ans": "ans3"
  }
]
 
